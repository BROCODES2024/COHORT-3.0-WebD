https://projects.100xdevs.com/tracks/async-js-1/Asynchronous-Javascript--Callbacks-and-more-1
https://projects.100xdevs.com/tracks/promises-async-await/Promises-and-async--await-1

Execution Order of Different JavaScript Tasks
Here‚Äôs a structured list of how JavaScript executes different types of tasks, in order of priority:
1Ô∏è‚É£ Synchronous Code (Highest Priority)
‚úÖ Executed immediately in order, blocking further execution.

console.log("start");
console.log("end");
‚è≥ Execution Order:

sql
Copy
Edit
start
end
2Ô∏è‚É£ Microtask Queue (Executed After Synchronous Code)
‚úÖ Includes:

Promise.then(), Promise.catch(), Promise.finally()
queueMicrotask()
MutationObserver
js
Copy
Edit
Promise.resolve().then(() => console.log("promise"));
queueMicrotask(() => console.log("microtask"));
‚è≥ Execution Order (after sync code):

cpp
Copy
Edit
promise
microtask
3Ô∏è‚É£ Macrotask Queue (Executed After Microtasks)
‚úÖ Includes:

setTimeout(), setInterval()
setImmediate() (Node.js)
requestAnimationFrame()
I/O operations (file read/write, network requests)
js
Copy
Edit
setTimeout(() => console.log("setTimeout"), 0);
setInterval(() => console.log("setInterval"), 1000);
‚è≥ Execution Order (after microtasks):

javascript
Copy
Edit
setTimeout
(setInterval keeps repeating every 1s)
4Ô∏è‚É£ UI Rendering (Executed After Macrotasks)
‚úÖ Includes:

Browser paints UI updates
requestAnimationFrame()
js
Copy
Edit
requestAnimationFrame(() => console.log("render"));
‚è≥ Execution Order (after macrotasks):

nginx
Copy
Edit
render
Full Example and Execution Order
js
Copy
Edit
console.log("start");

setTimeout(() => console.log("setTimeout"), 0);

Promise.resolve()
    .then(() => console.log("promise1"))
    .then(() => console.log("promise2"));

queueMicrotask(() => console.log("microtask"));

console.log("end");
‚è≥ Final Execution Order:

arduino
Copy
Edit
start      // Synchronous
end        // Synchronous
promise1   // Microtask
promise2   // Microtask
microtask  // Microtask
setTimeout // Macrotask (executed last)
üìå Final Summary
1Ô∏è‚É£ Synchronous Code (executes first).
2Ô∏è‚É£ Microtasks (Promise.then, queueMicrotask) (executed next).
3Ô∏è‚É£ Macrotasks (setTimeout, setInterval) (executed last).
4Ô∏è‚É£ UI Rendering (requestAnimationFrame) (after all tasks).

‚úÖ Microtasks always execute before Macrotasks, even if both are scheduled at the same time!