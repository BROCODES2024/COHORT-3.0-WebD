Step 1 - Types of languages
1. Strongly typed vs loosely typed
The terms strongly typed and loosely typed refer to how programming languages handle types, particularly how strict they are about type conversions and type safety.

Strongly typed languages
Examples - Java, C++, C, Rust
Benefits - 
Lesser runtime errors
Stricter codebase
Easy to catch errors at compile time

Code doesn’t work ❌
#include <iostream>

int main() {
  int number = 10;
  number = "text";
  return 0;
}

Loosely typed languages
Examples - Python, Javascript, Perl, php
Benefits
Easy to write code
Fast to bootstrap
Low learning curve

Code does work ✅

function main() {
  let number = 10;
  number = "text";
  return number;
}
People realised that javascript is a very power language, but lacks types. Typescript was introduced as a new language to add types on top of javascript.

Step 2 - What is Typescript
What is typescript?
TypeScript is a programming language developed and maintained by Microsoft. 
It is a strict syntactical superset of JavaScript and adds optional static typing to the language.

Where/How does typescript code run?
Typescript code never runs in your browser. Your browser can only understand javascript. 
Javascript is the runtime language (the thing that actually runs in your browser/nodejs runtime)
Typescript is something that compiles down to javascript
When typescript is compiled down to javascript, you get type checking (similar to C++). If there is an error, the conversion to Javascript fails. 

Typescript compiler
tsc is the official typescript compiler that you can use to convert Typescript code into Javascript
There are many other famous compilers/transpilers for converting Typescript to Javascript. Some famous ones are - 
esbuild
swc
